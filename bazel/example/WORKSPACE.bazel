load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

P4RUNTIME_COMMIT="263b08c59991d31def22b0467a2fb2ae3bf61fe7"

http_archive(
    name = "com_github_p4lang_p4runtime",
    # TODO(smolkaj): Set url to v1.2 release once it is available.
    urls = ["https://github.com/p4lang/p4runtime/archive/%s.zip" % P4RUNTIME_COMMIT],
    strip_prefix = "p4runtime-%s/proto" % P4RUNTIME_COMMIT,
    # TODO(smolkaj): Include once URL points to stable release.
    # sha256 = "...",
)

# As an alternative to http_archive, can use git_repository rule.
# git_repository(
#   name = "com_github_p4lang_p4runtime",
#   remote = "https://github.com/p4lang/p4runtime.git",
#   # strip_prefix = "proto",  # https://github.com/bazelbuild/bazel/issues/10062
#   patch_cmds = ["mv proto/* ."],  # Workaround since strip_prefix is broken.
#   commit = P4RUNTIME_COMMIT,  # Replace with tag = "v1.2" once released.
# )

load("@com_github_p4lang_p4runtime//:p4runtime_deps.bzl", "p4runtime_deps")
p4runtime_deps()

# -- Transitive dependencies of P4Runtime dependencies -------------------------

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

load("@com_google_googleapis//:repository_rules.bzl", "switched_rules_by_language")
switched_rules_by_language(
    name = "com_google_googleapis_imports",
    grpc = True,
    cc = True,
    python = True,
)

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
grpc_deps()
load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")
grpc_extra_deps()
load("@com_github_grpc_grpc//bazel:grpc_python_deps.bzl", "grpc_python_deps")
grpc_python_deps()

load("@rules_python//python:pip.bzl", "pip_import", "pip_repositories")
pip_repositories()
pip_import(
    name = "grpc_python_dependencies",
    requirements = "@com_github_grpc_grpc//:requirements.bazel.txt",
)

load("@grpc_python_dependencies//:requirements.bzl", "pip_install")
pip_install()
