// Copyright 2013-present Barefoot Networks, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: p4/v1/p4data.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type P4Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*P4Data_Bitstring
	//	*P4Data_Varbit
	//	*P4Data_Bool
	//	*P4Data_Tuple
	//	*P4Data_Struct
	//	*P4Data_Header
	//	*P4Data_HeaderUnion
	//	*P4Data_HeaderStack
	//	*P4Data_HeaderUnionStack
	//	*P4Data_Enum
	//	*P4Data_Error
	//	*P4Data_EnumValue
	Data isP4Data_Data `protobuf_oneof:"data"`
}

func (x *P4Data) Reset() {
	*x = P4Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4Data) ProtoMessage() {}

func (x *P4Data) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4Data.ProtoReflect.Descriptor instead.
func (*P4Data) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{0}
}

func (m *P4Data) GetData() isP4Data_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *P4Data) GetBitstring() []byte {
	if x, ok := x.GetData().(*P4Data_Bitstring); ok {
		return x.Bitstring
	}
	return nil
}

func (x *P4Data) GetVarbit() *P4Varbit {
	if x, ok := x.GetData().(*P4Data_Varbit); ok {
		return x.Varbit
	}
	return nil
}

func (x *P4Data) GetBool() bool {
	if x, ok := x.GetData().(*P4Data_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *P4Data) GetTuple() *P4StructLike {
	if x, ok := x.GetData().(*P4Data_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (x *P4Data) GetStruct() *P4StructLike {
	if x, ok := x.GetData().(*P4Data_Struct); ok {
		return x.Struct
	}
	return nil
}

func (x *P4Data) GetHeader() *P4Header {
	if x, ok := x.GetData().(*P4Data_Header); ok {
		return x.Header
	}
	return nil
}

func (x *P4Data) GetHeaderUnion() *P4HeaderUnion {
	if x, ok := x.GetData().(*P4Data_HeaderUnion); ok {
		return x.HeaderUnion
	}
	return nil
}

func (x *P4Data) GetHeaderStack() *P4HeaderStack {
	if x, ok := x.GetData().(*P4Data_HeaderStack); ok {
		return x.HeaderStack
	}
	return nil
}

func (x *P4Data) GetHeaderUnionStack() *P4HeaderUnionStack {
	if x, ok := x.GetData().(*P4Data_HeaderUnionStack); ok {
		return x.HeaderUnionStack
	}
	return nil
}

func (x *P4Data) GetEnum() string {
	if x, ok := x.GetData().(*P4Data_Enum); ok {
		return x.Enum
	}
	return ""
}

func (x *P4Data) GetError() string {
	if x, ok := x.GetData().(*P4Data_Error); ok {
		return x.Error
	}
	return ""
}

func (x *P4Data) GetEnumValue() []byte {
	if x, ok := x.GetData().(*P4Data_EnumValue); ok {
		return x.EnumValue
	}
	return nil
}

type isP4Data_Data interface {
	isP4Data_Data()
}

type P4Data_Bitstring struct {
	Bitstring []byte `protobuf:"bytes,1,opt,name=bitstring,proto3,oneof"` // for bit<W>, int<W>
}

type P4Data_Varbit struct {
	Varbit *P4Varbit `protobuf:"bytes,2,opt,name=varbit,proto3,oneof"` // for varbit<W>
}

type P4Data_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

type P4Data_Tuple struct {
	Tuple *P4StructLike `protobuf:"bytes,4,opt,name=tuple,proto3,oneof"`
}

type P4Data_Struct struct {
	Struct *P4StructLike `protobuf:"bytes,5,opt,name=struct,proto3,oneof"`
}

type P4Data_Header struct {
	Header *P4Header `protobuf:"bytes,6,opt,name=header,proto3,oneof"`
}

type P4Data_HeaderUnion struct {
	HeaderUnion *P4HeaderUnion `protobuf:"bytes,7,opt,name=header_union,json=headerUnion,proto3,oneof"`
}

type P4Data_HeaderStack struct {
	HeaderStack *P4HeaderStack `protobuf:"bytes,8,opt,name=header_stack,json=headerStack,proto3,oneof"`
}

type P4Data_HeaderUnionStack struct {
	HeaderUnionStack *P4HeaderUnionStack `protobuf:"bytes,9,opt,name=header_union_stack,json=headerUnionStack,proto3,oneof"`
}

type P4Data_Enum struct {
	Enum string `protobuf:"bytes,10,opt,name=enum,proto3,oneof"` // safe (non-serializable) enums only
}

type P4Data_Error struct {
	Error string `protobuf:"bytes,11,opt,name=error,proto3,oneof"`
}

type P4Data_EnumValue struct {
	EnumValue []byte `protobuf:"bytes,12,opt,name=enum_value,json=enumValue,proto3,oneof"` // serializable enums only
}

func (*P4Data_Bitstring) isP4Data_Data() {}

func (*P4Data_Varbit) isP4Data_Data() {}

func (*P4Data_Bool) isP4Data_Data() {}

func (*P4Data_Tuple) isP4Data_Data() {}

func (*P4Data_Struct) isP4Data_Data() {}

func (*P4Data_Header) isP4Data_Data() {}

func (*P4Data_HeaderUnion) isP4Data_Data() {}

func (*P4Data_HeaderStack) isP4Data_Data() {}

func (*P4Data_HeaderUnionStack) isP4Data_Data() {}

func (*P4Data_Enum) isP4Data_Data() {}

func (*P4Data_Error) isP4Data_Data() {}

func (*P4Data_EnumValue) isP4Data_Data() {}

type P4Varbit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitstring []byte `protobuf:"bytes,1,opt,name=bitstring,proto3" json:"bitstring,omitempty"`
	Bitwidth  int32  `protobuf:"varint,2,opt,name=bitwidth,proto3" json:"bitwidth,omitempty"` // dynamic bitwidth of the field
}

func (x *P4Varbit) Reset() {
	*x = P4Varbit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4Varbit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4Varbit) ProtoMessage() {}

func (x *P4Varbit) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4Varbit.ProtoReflect.Descriptor instead.
func (*P4Varbit) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{1}
}

func (x *P4Varbit) GetBitstring() []byte {
	if x != nil {
		return x.Bitstring
	}
	return nil
}

func (x *P4Varbit) GetBitwidth() int32 {
	if x != nil {
		return x.Bitwidth
	}
	return 0
}

type P4StructLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*P4Data `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *P4StructLike) Reset() {
	*x = P4StructLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4StructLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4StructLike) ProtoMessage() {}

func (x *P4StructLike) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4StructLike.ProtoReflect.Descriptor instead.
func (*P4StructLike) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{2}
}

func (x *P4StructLike) GetMembers() []*P4Data {
	if x != nil {
		return x.Members
	}
	return nil
}

type P4Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the header is invalid (is_valid is "false"), then the bitstrings
	// repeated field must be empty.
	IsValid    bool     `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Bitstrings [][]byte `protobuf:"bytes,2,rep,name=bitstrings,proto3" json:"bitstrings,omitempty"`
}

func (x *P4Header) Reset() {
	*x = P4Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4Header) ProtoMessage() {}

func (x *P4Header) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4Header.ProtoReflect.Descriptor instead.
func (*P4Header) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{3}
}

func (x *P4Header) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *P4Header) GetBitstrings() [][]byte {
	if x != nil {
		return x.Bitstrings
	}
	return nil
}

type P4HeaderUnion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An empty string indicates that none of the union members are valid and
	// valid_header must therefore be unset.
	ValidHeaderName string    `protobuf:"bytes,1,opt,name=valid_header_name,json=validHeaderName,proto3" json:"valid_header_name,omitempty"`
	ValidHeader     *P4Header `protobuf:"bytes,2,opt,name=valid_header,json=validHeader,proto3" json:"valid_header,omitempty"`
}

func (x *P4HeaderUnion) Reset() {
	*x = P4HeaderUnion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4HeaderUnion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4HeaderUnion) ProtoMessage() {}

func (x *P4HeaderUnion) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4HeaderUnion.ProtoReflect.Descriptor instead.
func (*P4HeaderUnion) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{4}
}

func (x *P4HeaderUnion) GetValidHeaderName() string {
	if x != nil {
		return x.ValidHeaderName
	}
	return ""
}

func (x *P4HeaderUnion) GetValidHeader() *P4Header {
	if x != nil {
		return x.ValidHeader
	}
	return nil
}

type P4HeaderStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The length of this repeated field must always be equal to the compile-time
	// size of the header stack, which is specified in P4Info.
	Entries []*P4Header `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *P4HeaderStack) Reset() {
	*x = P4HeaderStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4HeaderStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4HeaderStack) ProtoMessage() {}

func (x *P4HeaderStack) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4HeaderStack.ProtoReflect.Descriptor instead.
func (*P4HeaderStack) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{5}
}

func (x *P4HeaderStack) GetEntries() []*P4Header {
	if x != nil {
		return x.Entries
	}
	return nil
}

type P4HeaderUnionStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The length of this repeated field must always be equal to the compile-time
	// size of the header union stack, which is specified in P4Info.
	Entries []*P4HeaderUnion `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *P4HeaderUnionStack) Reset() {
	*x = P4HeaderUnionStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p4_v1_p4data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P4HeaderUnionStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P4HeaderUnionStack) ProtoMessage() {}

func (x *P4HeaderUnionStack) ProtoReflect() protoreflect.Message {
	mi := &file_p4_v1_p4data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P4HeaderUnionStack.ProtoReflect.Descriptor instead.
func (*P4HeaderUnionStack) Descriptor() ([]byte, []int) {
	return file_p4_v1_p4data_proto_rawDescGZIP(), []int{6}
}

func (x *P4HeaderUnionStack) GetEntries() []*P4HeaderUnion {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_p4_v1_p4data_proto protoreflect.FileDescriptor

var file_p4_v1_p4data_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x34, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x34, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x22, 0x88, 0x04, 0x0a, 0x06,
	0x50, 0x34, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x69, 0x74, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x69, 0x74,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x06, 0x76, 0x61, 0x72, 0x62, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x34, 0x56, 0x61, 0x72, 0x62, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x72, 0x62, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x74, 0x75, 0x70, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x34, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x75, 0x70, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x39,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0c, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x49, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x10, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x08, 0x50, 0x34, 0x56, 0x61, 0x72, 0x62,
	0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x74, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x69, 0x74, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x74, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x0c,
	0x50, 0x34, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x27, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x08, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x69, 0x74, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0a, 0x62, 0x69, 0x74, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x6f, 0x0a, 0x0d,
	0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x3a, 0x0a,
	0x0d, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x29,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x12, 0x50, 0x34, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x34, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x34, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x34,
	0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x34, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x34, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p4_v1_p4data_proto_rawDescOnce sync.Once
	file_p4_v1_p4data_proto_rawDescData = file_p4_v1_p4data_proto_rawDesc
)

func file_p4_v1_p4data_proto_rawDescGZIP() []byte {
	file_p4_v1_p4data_proto_rawDescOnce.Do(func() {
		file_p4_v1_p4data_proto_rawDescData = protoimpl.X.CompressGZIP(file_p4_v1_p4data_proto_rawDescData)
	})
	return file_p4_v1_p4data_proto_rawDescData
}

var file_p4_v1_p4data_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_p4_v1_p4data_proto_goTypes = []interface{}{
	(*P4Data)(nil),             // 0: p4.v1.P4Data
	(*P4Varbit)(nil),           // 1: p4.v1.P4Varbit
	(*P4StructLike)(nil),       // 2: p4.v1.P4StructLike
	(*P4Header)(nil),           // 3: p4.v1.P4Header
	(*P4HeaderUnion)(nil),      // 4: p4.v1.P4HeaderUnion
	(*P4HeaderStack)(nil),      // 5: p4.v1.P4HeaderStack
	(*P4HeaderUnionStack)(nil), // 6: p4.v1.P4HeaderUnionStack
}
var file_p4_v1_p4data_proto_depIdxs = []int32{
	1,  // 0: p4.v1.P4Data.varbit:type_name -> p4.v1.P4Varbit
	2,  // 1: p4.v1.P4Data.tuple:type_name -> p4.v1.P4StructLike
	2,  // 2: p4.v1.P4Data.struct:type_name -> p4.v1.P4StructLike
	3,  // 3: p4.v1.P4Data.header:type_name -> p4.v1.P4Header
	4,  // 4: p4.v1.P4Data.header_union:type_name -> p4.v1.P4HeaderUnion
	5,  // 5: p4.v1.P4Data.header_stack:type_name -> p4.v1.P4HeaderStack
	6,  // 6: p4.v1.P4Data.header_union_stack:type_name -> p4.v1.P4HeaderUnionStack
	0,  // 7: p4.v1.P4StructLike.members:type_name -> p4.v1.P4Data
	3,  // 8: p4.v1.P4HeaderUnion.valid_header:type_name -> p4.v1.P4Header
	3,  // 9: p4.v1.P4HeaderStack.entries:type_name -> p4.v1.P4Header
	4,  // 10: p4.v1.P4HeaderUnionStack.entries:type_name -> p4.v1.P4HeaderUnion
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_p4_v1_p4data_proto_init() }
func file_p4_v1_p4data_proto_init() {
	if File_p4_v1_p4data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_p4_v1_p4data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4_v1_p4data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4Varbit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4_v1_p4data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4StructLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4_v1_p4data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4_v1_p4data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4HeaderUnion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4_v1_p4data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4HeaderStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p4_v1_p4data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P4HeaderUnionStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_p4_v1_p4data_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*P4Data_Bitstring)(nil),
		(*P4Data_Varbit)(nil),
		(*P4Data_Bool)(nil),
		(*P4Data_Tuple)(nil),
		(*P4Data_Struct)(nil),
		(*P4Data_Header)(nil),
		(*P4Data_HeaderUnion)(nil),
		(*P4Data_HeaderStack)(nil),
		(*P4Data_HeaderUnionStack)(nil),
		(*P4Data_Enum)(nil),
		(*P4Data_Error)(nil),
		(*P4Data_EnumValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p4_v1_p4data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p4_v1_p4data_proto_goTypes,
		DependencyIndexes: file_p4_v1_p4data_proto_depIdxs,
		MessageInfos:      file_p4_v1_p4data_proto_msgTypes,
	}.Build()
	File_p4_v1_p4data_proto = out.File
	file_p4_v1_p4data_proto_rawDesc = nil
	file_p4_v1_p4data_proto_goTypes = nil
	file_p4_v1_p4data_proto_depIdxs = nil
}
